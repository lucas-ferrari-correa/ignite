{"version":3,"file":"src/functions/generateCertificate.js","mappings":"sEAEA,MASaA,EAHJC,QAAQC,IAAIC,WAIjB,IAAI,EAAAC,SAAA,eAVQ,CACdC,OAAQ,YACRC,SAAU,0BASR,IAAI,EAAAF,SAAA,gB,QCbRG,EAAOC,QAAUC,QAAQ,Y,QCAzBF,EAAOC,QAAUC,QAAQ,sB,QCAzBF,EAAOC,QAAUC,QAAQ,U,OCAzBF,EAAOC,QAAUC,QAAQ,e,QCAzBF,EAAOC,QAAUC,QAAQ,O,OCAzBF,EAAOC,QAAUC,QAAQ,UCCrBC,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaL,QAGrB,IAAID,EAASG,EAAyBE,GAAY,CAGjDJ,QAAS,IAOV,OAHAO,EAAoBH,GAAUL,EAAQA,EAAOC,QAASG,GAG/CJ,EAAOC,QCpBfG,EAAoBK,EAAKT,IACxB,IAAIU,EAASV,GAAUA,EAAOW,WAC7B,IAAOX,EAAiB,QACxB,IAAM,EAEP,OADAI,EAAoBQ,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,GCLRN,EAAoBQ,EAAI,CAACX,EAASa,KACjC,IAAI,IAAIC,KAAOD,EACXV,EAAoBY,EAAEF,EAAYC,KAASX,EAAoBY,EAAEf,EAASc,IAC5EE,OAAOC,eAAejB,EAASc,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,MCJ3EX,EAAoBY,EAAI,CAACK,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFlB,EAAoBsB,EAAKzB,IACH,oBAAX0B,QAA0BA,OAAOC,aAC1CX,OAAOC,eAAejB,EAAS0B,OAAOC,YAAa,CAAEC,MAAO,WAE7DZ,OAAOC,eAAejB,EAAS,aAAc,CAAE4B,OAAO,K,0JCkBvD,MAaaC,EAASC,MAAOC,IAE3B,MAAM,GAAEC,EAAE,KAAEC,EAAI,MAAEC,GAAUC,KAAKC,MAAML,EAAMM,aAEtB,UACd,CACLC,UAAW,qBACXC,uBAAwB,WACxBC,0BAA2B,CACzB,MAAOR,KAGVS,WAEgCC,MAAM,UAGjC,QACC,CACHJ,UAAW,qBACXK,KAAM,CACJX,GAAAA,EACAC,KAAAA,EACAC,MAAAA,KAGHO,UAGL,MAAMG,EAAY,SAAUnD,QAAQoD,MAAO,MAAO,YAAa,YACzDC,EAAQ,iBAAgBF,EAAW,UAEnCG,EAAkB,CACtBC,KAAM,MAAQC,OAAO,cACrBf,MAAAA,EACAD,KAAAA,EACAD,GAAAA,EACAc,MAAAA,GAKII,QAvDQpB,eAAgBiB,GAC9B,MAAMI,EAAW,SACf1D,QAAQoD,MACR,MACA,YACA,mBAGIO,EAAO,iBAAgBD,EAAU,SAEvC,OAAO,YAAmBC,EAAnB,CAAyBL,GA6CVM,CAAQN,GAIxBO,QAAgB,qBAA0B,CAC9CC,UAAU,EACVC,KAAM,SACNC,gBAAiB,oBACjBC,qBAAsB,qBAGlBC,QAAaL,EAAQM,gBAErBD,EAAKE,WAAWX,GAEtB,MAAMY,QAAYH,EAAKG,IAAI,CACzBb,OAAQ,KACRc,WAAW,EACXC,KAAMvE,QAAQC,IAAIC,WAAa,kBAAoB,KACnDsE,iBAAiB,EACjBC,mBAAmB,UAGfZ,EAAQa,QAId,MAAMC,EAAK,IAAI,EAAAC,GAYf,aAVMD,EACHE,UAAU,CACTC,OAAQ,yCACRC,IAAK,GAAGxC,QACRyC,IAAK,cACLC,KAAMZ,EACNa,YAAa,oBAEdlC,UAEI,CACLmC,WAAY,IACZvC,KAAMF,KAAK0C,UAAU,CACnBC,QAAS,uBACTC,IAAK,mEAAmE/C,UAE1EgD,QAAS,CACP,eAAgB,uB","sources":["webpack://certificate/./src/utils/dynamodbClient.ts","webpack://certificate/external commonjs \"aws-sdk\"","webpack://certificate/external commonjs \"chrome-aws-lambda\"","webpack://certificate/external commonjs \"dayjs\"","webpack://certificate/external commonjs \"handlebars\"","webpack://certificate/external node-commonjs \"fs\"","webpack://certificate/external node-commonjs \"path\"","webpack://certificate/webpack/bootstrap","webpack://certificate/webpack/runtime/compat get default export","webpack://certificate/webpack/runtime/define property getters","webpack://certificate/webpack/runtime/hasOwnProperty shorthand","webpack://certificate/webpack/runtime/make namespace object","webpack://certificate/./src/functions/generateCertificate.ts"],"sourcesContent":["import { DynamoDB } from \"aws-sdk\";\n\nconst options = {\n  region: \"localhost\",\n  endpoint: \"http://localhost:8000\"\n}\n\nconst isOffline = () => {\n  return process.env.IS_OFFLINE;\n}\n\nexport const document = isOffline() \n  ? new DynamoDB.DocumentClient(options) \n  : new DynamoDB.DocumentClient()","module.exports = require(\"aws-sdk\");","module.exports = require(\"chrome-aws-lambda\");","module.exports = require(\"dayjs\");","module.exports = require(\"handlebars\");","module.exports = require(\"fs\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import chromium from \"chrome-aws-lambda\";\nimport path from \"path\";\nimport handlebars from \"handlebars\";\nimport fs from \"fs\";\nimport dayjs from \"dayjs\";\nimport { S3 } from \"aws-sdk\";\n\nimport { document } from \"../utils/dynamodbClient\";\n\ninterface ICreateCertificate {\n  id: string;\n  name: string;\n  grade: string;\n}\n\ninterface ITemplate {\n  id: string;\n  name: string;\n  grade: string;\n  date: string;\n  medal: string;\n}\n\nconst compile = async function (data: ITemplate) {\n  const filePath = path.join(\n    process.cwd(),\n    \"src\",\n    \"templates\",\n    \"certificate.hbs\"\n  );\n\n  const html = fs.readFileSync(filePath, \"utf-8\");\n\n  return handlebars.compile(html)(data);\n};\n\nexport const handle = async (event) => {\n  // id, name, grade =\n  const { id, name, grade } = JSON.parse(event.body) as ICreateCertificate;\n\n  const response = await document\n    .query({\n      TableName: \"users_certificates\",\n      KeyConditionExpression: \"id = :id\",\n      ExpressionAttributeValues: {\n        \":id\": id,\n      },\n    })\n    .promise();\n\n  const userAlreadyExists = response.Items[0];\n\n  if (!userAlreadyExists) {\n    await document\n      .put({\n        TableName: \"users_certificates\",\n        Item: {\n          id,\n          name,\n          grade,\n        },\n      })\n      .promise();\n  }\n\n  const medalPath = path.join(process.cwd(), \"src\", \"templates\", \"selo.png\");\n  const medal = fs.readFileSync(medalPath, \"base64\");\n\n  const data: ITemplate = {\n    date: dayjs().format(\"DD/MM/YYYY\"),\n    grade,\n    name,\n    id,\n    medal,\n  };\n\n  // Gera o certificado\n  // Compilar usando handlebars\n  const content = await compile(data);\n\n  // Transformar em PDF\n\n  const browser = await chromium.puppeteer.launch({\n    headless: true,\n    args: chromium.args,\n    defaultViewport: chromium.defaultViewport,\n    executablePath: await chromium.executablePath,\n  });\n\n  const page = await browser.newPage();\n\n  await page.setContent(content);\n\n  const pdf = await page.pdf({\n    format: \"a4\",\n    landscape: true,\n    path: process.env.IS_OFFLINE ? \"certificate.pdf\" : null,\n    printBackground: true,\n    preferCSSPageSize: true,\n  });\n\n  await browser.close();\n\n  // Salvar no S3\n\n  const s3 = new S3();\n\n  await s3\n    .putObject({\n      Bucket: \"ignitecertificate-lucasferraricorrea-2\",\n      Key: `${id}.pdf`,\n      ACL: \"public-read\",\n      Body: pdf,\n      ContentType: \"application/pdf\",\n    })\n    .promise();\n\n  return {\n    statusCode: 201,\n    body: JSON.stringify({\n      message: \"Certificate created!\",\n      url: `https://ignitecertificate-lucasferraricorrea-2.s3.amazonaws.com/${id}.pdf`,\n    }),\n    headers: {\n      \"Content-type\": \"application/json\",\n    },\n  };\n};"],"names":["document","process","env","IS_OFFLINE","DynamoDB","region","endpoint","module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","handle","async","event","id","name","grade","JSON","parse","body","TableName","KeyConditionExpression","ExpressionAttributeValues","promise","Items","Item","medalPath","cwd","medal","data","date","format","content","filePath","html","compile","browser","headless","args","defaultViewport","executablePath","page","newPage","setContent","pdf","landscape","path","printBackground","preferCSSPageSize","close","s3","S3","putObject","Bucket","Key","ACL","Body","ContentType","statusCode","stringify","message","url","headers"],"sourceRoot":""}